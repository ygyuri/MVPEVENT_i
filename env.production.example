# Production Environment Configuration
# 
# ⚠️  IMPORTANT: This file is for reference only!
# 
# For production deployment, all sensitive values are now managed through GitHub Secrets.
# See GITHUB_SECRETS_SETUP.md for complete setup instructions.
#
# This file shows the structure and non-sensitive default values.
# The actual .env.production file is generated automatically during deployment.

# Application Configuration
NODE_ENV=production
SERVER_PORT=5000
FRONTEND_URL=https://your-domain.com
BASE_URL=https://your-domain.com

# GKE Configuration (if using Google Kubernetes Engine)
KUBERNETES_NAMESPACE=event-i
GKE_CLUSTER_NAME=event-i-cluster
GKE_ZONE=us-central1-a
PROJECT_ID=your-gcp-project-id

# Nginx Configuration
NGINX_HTTP_PORT=80
NGINX_HTTPS_PORT=443

# Database Configuration
# ⚠️  SECRET: Add MONGO_ROOT_USERNAME, MONGO_ROOT_PASSWORD, MONGODB_URI to GitHub Secrets
MONGO_ROOT_USERNAME=admin
MONGO_ROOT_PASSWORD=CHANGE-THIS-SECURE-PASSWORD
MONGODB_URI=mongodb://admin:CHANGE-THIS-SECURE-PASSWORD@mongodb:27017/event_i_production?authSource=admin

# Redis Configuration
# ⚠️  SECRET: Add REDIS_URL to GitHub Secrets
REDIS_URL=redis://redis:6379

# JWT Configuration (Production - maximum security)
# ⚠️  SECRET: Generate new secrets and add to GitHub Secrets
# Use: openssl rand -base64 32
JWT_SECRET=GENERATE-NEW-SECURE-JWT-SECRET
JWT_REFRESH_SECRET=GENERATE-NEW-SECURE-REFRESH-SECRET
JWT_EXPIRES_IN=1h
JWT_REFRESH_EXPIRES_IN=7d

# PayHero Payment Configuration
# ⚠️  SECRET: Add all PayHero credentials to GitHub Secrets
PAYHERO_API_USERNAME=your-payhero-username
PAYHERO_API_PASSWORD=your-payhero-password
PAYHERO_ACCOUNT_ID=your-payhero-account-id
PAYHERO_BASIC_AUTH_TOKEN=your-payhero-basic-auth-token
PAYHERO_CHANNEL_ID=your-payhero-channel-id
PAYHERO_CALLBACK_URL=https://your-domain.com/api/payhero/callback
PAYHERO_SUCCESS_URL=https://your-domain.com/checkout/success
PAYHERO_FAILED_URL=https://your-domain.com/checkout/failed

# MPESA Configuration
# ⚠️  SECRET: Add all MPESA credentials to GitHub Secrets
MPESA_BASE_URL=https://api.safaricom.co.ke
MPESA_CONSUMER_KEY=your-mpesa-consumer-key
MPESA_CONSUMER_SECRET=your-mpesa-consumer-secret
MPESA_PASSKEY=your-mpesa-passkey
MPESA_SHORTCODE=your-mpesa-shortcode
MPESA_CALLBACK_URL=https://your-domain.com/api/orders/mpesa/callback
MPESA_TIMEOUT_URL=https://your-domain.com/api/orders/mpesa/timeout

# Email Configuration
# ⚠️  SECRET: Add SMTP credentials to GitHub Secrets
SMTP_HOST=smtp.your-provider.com
SMTP_PORT=587
SMTP_USER=your-smtp-username
SMTP_PASS=your-smtp-password
EMAIL_FROM=noreply@your-domain.com

# Security Configuration (Production - maximum security)
# ⚠️  SECRET: Generate new secrets and add to GitHub Secrets
# Use: openssl rand -base64 32
TICKET_QR_SECRET=GENERATE-NEW-SECURE-QR-SECRET
TICKET_QR_ENC_KEY=GENERATE-NEW-SECURE-ENCRYPTION-KEY
TICKET_QR_AUTO_ROTATE_MS=60000

# Rate Limiting (Production - strict)
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# Debug Configuration
DEBUG=false
LOG_LEVEL=error

# Monitoring and Logging (Optional)
SENTRY_DSN=your-sentry-dsn-for-error-tracking
LOG_TO_FILE=true
LOG_FILE_PATH=/var/log/event-i/app.log

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================
#
# 1. Read GITHUB_SECRETS_SETUP.md for complete setup instructions
# 2. Add all secrets marked with ⚠️ SECRET to your GitHub repository secrets
# 3. Update URLs to match your actual domain
# 4. Generate new secure secrets for JWT and QR configurations
# 5. Never commit actual credentials to version control
#
# The deployment process will automatically generate .env.production from
# GitHub Secrets during CI/CD pipeline execution.